version: "3"

services:
  logstash:
    container_name: logstash-lesson-practice
    image: docker.elastic.co/logstash/logstash:7.10.1
    restart: always
    environment:
      XPACK_MONITORING_ENABLED: 'false'
      ES_HOST: 'elasticsearch-lesson-practice:9200'
    ports:
      - '5044:5044/udp'
    volumes:
      - ./deploy/logstash.conf:/config/logstash.conf:ro
    command: logstash -f /config/logstash.conf

  kibana:
    container_name: kibana-lesson-practice
    image: docker.elastic.co/kibana/kibana:7.10.2
    ports:
      - '5601:5601'
    restart: always
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: kibana

  elasticsearch:
    container_name: elasticsearch-lesson-practice
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      discovery.type: single-node
    restart: always
    ports:
      - '9200:9200'
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: elasticsearch

  nginx:
    image: nginx:1.23.0
    restart: always
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx:/etc/nginx/conf.d:ro
      - ./log:/var/log/nginx
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: nginx
    depends_on:
      - api
      - auth
    ports:
      - "80:80"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ugc_zookeeper:/data

  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "views:1:1"
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: kafka
    volumes:
      - ugc_kafka:/var/run/docker.sock

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9002:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - kafka

  clickhouse-server:
    image: yandex/clickhouse-server:21.3.20.1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ugc_clickhouse_db:/var/lib/clickhouse

  clickhouse-client:
    image: yandex/clickhouse-client:21.3.20.1
    entrypoint:
      - /bin/sleep
    command:
      - infinity

  db-mongo:
    image: mongo:4.4.6
    container_name: db-mongo
    ports:
      - '27017:27017'
    restart: always
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: db-mongo
    volumes:
      - ./mongo:/mongo

  api:
    build: ./api_service
    entrypoint: /opt/app/src/entrypoint.sh
    env_file:
      - ./docker/variables.env
    expose:
      - "8000"
    ports:
      - "8000:8000"
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: api
    depends_on:
      - kafka
      - zookeeper
      - auth

  auth:
    build: ./auth_service
    env_file:
      - ./docker/variables.env
    expose:
      - "5000"
    ports:
      - "5000:5000"
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: auth
    depends_on:
      - db
      - storage

  db:
    image: postgres:14.4
    restart: always
    env_file:
      - ./docker/variables.env
    ports:
      - "5432:5432"
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: db

  storage:
    image: redis:7.0.0-alpine
    container_name: auth_redis
    ports:
      - "6379:6379"
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://127.0.0.1:5044'
        tag: storage

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  tests:
    build: ./tests
    entrypoint: /opt/tests/docker-entrypoint.sh
    depends_on:
      - api
      - auth

volumes:
  ugc_clickhouse_db:
  ugc_kafka:
  ugc_zookeeper: